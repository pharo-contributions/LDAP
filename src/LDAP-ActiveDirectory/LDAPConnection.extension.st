Extension { #name : #LDAPConnection }

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adActivateUser: userDN [
	"NORMAL_ACCOUNT 0x200 + DONT_EXPIRE_PASSWORD 0x10000"
	| op |
	op := LDAPAttrModifier set: 'userAccountControl' to: {(16r10200 asString)}.
	^ self request: (LDAPModifyRequest new dn: userDN; ops: {op})
]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adAddUser: userDN toGroup: groupDN [
	| op |
	op := LDAPAttrModifier addTo: 'member' values: {userDN}.
	^ self request: (LDAPModifyRequest new dn: groupDN; ops: {op})
]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adCreateUser: userDN userPrincipalName: userPrincipalName accountName: accountName givenName: givenName surName: surName [
	| fullName attrs |
	fullName := '<1s> <2s>' expandMacrosWith: givenName with: surName.
	attrs := Dictionary new
		at: 'objectClass' put: #('top' 'person' 'organizationalPerson' 'user');
		at: 'displayName' put: fullName;
		at: 'givenName' put: givenName;
		at: 'name' put: fullName;
		at: 'sn' put: surName;
		at: 'sAMAccountName' put: accountName;
		at: 'userPrincipalName' put: userPrincipalName;
		at: 'pwdLastSet' put: '0';
		yourself.
	^ self request: (LDAPAddRequest new dn: userDN; attrs: attrs)
]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adDeActivateUser: userDN [
	"ACCOUNTDISABLE 0x0002 + NORMAL_ACCOUNT 0x200"
	| op |
	op := LDAPAttrModifier set: 'userAccountControl' to: {(16r202 asString)}.
	^ self request: (LDAPModifyRequest new dn: userDN; ops: {op})

]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adDeleteUser: dn [
	^ self request: (LDAPDelRequest new dn: dn)
]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adExists: dn [
	| request search |
	search := LDAPSearchRequest new
			base: dn;
			scope: LDAPSearchScope wholeSubtree;
			derefAliases: LDAPSearchDerefAliases never;
			filter: (LDAPFilter with: 'objectclass').
			
	request := self request: search.
	^ request result notEmpty
]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adSetPassword: userDN to: aString [
	| op |
	op := LDAPAttrModifier set: 'unicodePwd' to: {(aString asActiveDirectoryUnicodePassword)}.
	^ self request: (LDAPModifyRequest new dn: userDN; ops: {op})

]

{ #category : #'*ldap-activedirectory' }
LDAPConnection >> adUpdateUser: userDN givenName: givenName surName: surName email: emailAddress fullName: fullName [
	| ops |
	ops := {
		LDAPAttrModifier set: 'displayName' to: {fullName}.
		LDAPAttrModifier set: 'givenName' to: {givenName}.
		LDAPAttrModifier set: 'sn' to: {surName}.
		LDAPAttrModifier set: 'mail' to: {emailAddress}.
	}.
	^ self request: (LDAPModifyRequest new dn: userDN; ops: ops)

]
